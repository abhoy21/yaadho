generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       Int
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  username String    @unique
  password String
  Content  Content[]
  Link     Link?
  accounts Account[]
  sessions Session[]
}

model Content {
  id        Int         @id @default(autoincrement())
  title     String
  type      ContentType
  userId    Int
  isPublic  Boolean     @default(true)
  createdAt DateTime    @default(now()) @db.Date
  content   String
  user      User        @relation(fields: [userId], references: [id])
  tags      Tag[]
}

model Tag {
  id        Int     @id @default(autoincrement())
  name      String
  contentId Int
  content   Content @relation(fields: [contentId], references: [id])
}

model Link {
  hash   String @id
  userId Int    @unique
  user   User   @relation(fields: [userId], references: [id])
}

enum ContentType {
  text
  image
  pdf
  link
}
